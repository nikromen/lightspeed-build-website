# nginx.conf
worker_processes auto;
pid /tmp/nginx.pid;
error_log /var/log/nginx/error.log warn


events {
    worker_connections 1024;
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
}


http {
    include /etc/nginx/mime.types;
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    sendfile on;


    upstream app_server {
        server unix:/tmp/gunicorn.sock fail_timeout=0;
    }


    server {
        listen 8080;
        server_name www.log-detective.com www.logdetective.com;

        location / {
            return 301 https://$host$request_uri;
        }
    }


    server {
        listen 443 ssl;
        client_max_body_size 4G;
        charset utf-8;
        server_name www.log-detective.com;
        index index.html;
        keepalive_timeout 5;
        error_log  /tmp/error.log;
        access_log /tmp/access.log;
        location / {
            try_files $uri @proxy_to_app;
        }


        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://app_server;
        }
    }


    server {
        listen 443 ssl;
        client_max_body_size 4G;
        charset utf-8;
        server_name www.logdetective.com;
        index index.html;
        keepalive_timeout 5;
        error_log  /tmp/error.log;
        access_log /tmp/access.log;
        location / {
            try_files $uri @proxy_to_app;
        }


        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://app_server;
        }
    }
}
